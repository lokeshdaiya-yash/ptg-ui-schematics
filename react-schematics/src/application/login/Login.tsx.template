import { useState, useEffect } from 'react';
import { authClass } from '../services/auth.service';
import './Login.scss';

const Login = () => {
  const [user, setUser] = useState({
    isLoading: false,
    isAlert: false,
    email: '',
    password: '',
    error: null,
    disable: true,
  });

  const [formErr, setFormErr] = useState({
    email: false,
    password: false,
  });

  const setState = (field: string, value: any) => {
    setUser((preState: any) => {
      return {
        ...preState,
        [field]: value,
      };
    });
  };

  const setErrState = (field: string, value: any) => {
    setFormErr((preState: any) => {
      return {
        ...preState,
        [field]: value,
      };
    });
  };

  const isDisabled = () => {
    setState(
      'disable',
      !(
        user.email.length > 0 &&
        user.password.length > 0 &&
        !formErr.email &&
        !formErr.password
      )
    );
  };
  //validate email and password
  const validate = (fieldName: string, value: any) => {
    let formErr = false;
    const regexEmail = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/i;
    switch (fieldName) {
      case 'email':
        if (value === '' || value ? true : false !== regexEmail.test(value)) {
          if (!regexEmail.test(value)) {
            formErr = true;
          }
        }
        break;
      case 'password':
        if (value === '') {
          formErr = true;
        }
        break;
      default: {
        alert('Validate');
      }
    }

    setErrState(fieldName, formErr);
  };

  //generic function for all input field
  const handleChange: any = (e: any) => {
    const { name, value } = e.target;
    validate(name, value);
    setUser((preState: any) => {
      return {
        ...preState,
        [name]: value,
      };
    });
  };

  const handleLogin = (event: any) => {
    event.preventDefault();
    setState('error', null);
    setState('isLoading', true);
    authClass
      .login({
        identifier: user.email,
        password: user.password,
      })
      .then((response: any) => {
        setState('isLoading', false);
        if (response.statusCode && response.statusCode !== 200) {
          throw new Error('Function not implemented.');
        } else if (response.data) {
          alert('Login Success');
        }
      })
      .catch((error: any) => {
        setState('isAlert', true);
      });
  };

  //validate on focus out or blur input
  const handleBlur: any = (e: any) => {
    const { name } = e.target;
    setFormErr((preState: any) => {
      return {
        ...preState,
        [name]: true,
      };
    });
  };

  useEffect(() => {
    isDisabled();
  }, [user.email, user.password]);

  return (
    <div className="login-wrapper container-fluid p-0 d-flex justify-content-center align-items-center">
      <div className="login-container">
        <div className="login-form-wrapper">
          <div className="form-group">{user.isAlert && 'Error Occured'}</div>
          <div className="form-group">
            <div className="login-logo text-center mb-3">
              <img
                className="login-logo"
                src="assets/images/YashLogo.png"
                alt="Yash Logo"
              />
            </div>
          </div>
          <form className="form-login">
            <div className="login-form">
              <div className="form-group mb-4 required">
                <label
                  htmlFor="inputEmail"
                  aria-labelledby="inputEmail"
                  tabIndex={0}
                >
                  Email *
                </label>
                <div className="userid input-group flex-nowrap">
                  <div className="input-group-prepend">
                    <i className="login-user-icon"></i>
                  </div>
                  <input
                    type="email"
                    id="inputEmail"
                    value={user.email}
                    onChange={handleChange}
                    className={`"w-100 form-control bg_0 ${
                      formErr.email === true ? 'border-danger' : ''
                    }`}
                    name="email"
                    placeholder="Enter your email"
                    onBlur={user.email === '' ? handleBlur : null}
                  />
                </div>
              </div>
              <div className="form-group mb-4 required">
                <label
                  htmlFor="inputPassword"
                  aria-labelledby="inputPassword"
                  tabIndex={0}
                >
                  Password *
                </label>
                <div className="userid input-group flex-nowrap">
                  <div className="input-group-prepend">
                    <i className="login-password-icon"></i>
                  </div>
                  <input
                    type="password"
                    id="inputPassword"
                    onChange={handleChange}
                    value={user.password}
                    className={`"w-100 form-control bg_0 ${
                      formErr.password === true ? 'border-danger' : ''
                    }`}
                    name="password"
                    placeholder="Enter your password"
                    onBlur={user.password === '' ? handleBlur : null}
                  />
                </div>
              </div>
            </div>
            <button
              className="w-100 mt-3 login-btn"
              onClick={handleLogin}
              tabIndex={0}
              disabled={user.disable}
              data-testid="login"
            >
              LOG IN
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};
export default Login;
