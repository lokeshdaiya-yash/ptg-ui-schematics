
import React from 'react';
import styles from './app.module.css';
import { useTranslation, Trans } from "react-i18next";
import i18next, { default as i18n } from 'i18next';
<% if (auth == 'msal') { %>
import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';
import { loginRequest } from './config/msalConfig';
<% } %>
import './styles.css';
import "./translations/i18n";

export function App() {
  const [langValue, setLangValue] = React.useState("en");
  <% if (auth == 'msal') { %>
  const { instance } = useMsal();

  const handleLogin = () => {
    instance.loginRedirect(loginRequest).catch((e) => {
      console.error(e);
    });
  };
  const handleLogout = () => {
    instance.logoutRedirect();
  };
  <% } %>
  const { t, i18n } = useTranslation();
  const changeLanguage = (e: any ) => {
    setLangValue(e.target.value)
    i18n.changeLanguage(e.target.value);
  };

  return (
    <div>
      <div className='headerContainer'>
        <section>
          <nav className="navbar">
            <a className="navbarBrand">
              <img
                src="assets/images/YashLogo.jpg"
                aria-label="logo"
                style={{ height: 50, width: 84 }}
              />
            </a>

            <div className="actionContainer">
              <div className="selectDropdown">
                <img
                  src="assets/images/language_2x.jpg"
                  aria-label="logo"
                  className="selectIcon"
                />
                <select className="formSelect" aria-label="Default select example" onChange={(e) => changeLanguage(e)} value={langValue}>
                  <option selected value="en">English</option>
                  <option value="zh">Chinese</option>
                </select>
              </div>
              <% if (auth === 'msal') { %>
              <AuthenticatedTemplate>
                <button onClick={handleLogout} className="loginBtn">Logout</button>
              </AuthenticatedTemplate>
              <UnauthenticatedTemplate>
                <button onClick={handleLogin} className="loginBtn">
                  LOGIN
                </button>
              </UnauthenticatedTemplate>
              <% } %>
              <% if (auth === 'okta' || auth === 'custom') { %>
              <button className="loginBtn">LOGIN</button>
              <% }%>
            </div>
          </nav>
        </section>
      </div>



      <div className="loginContainer">
        <div className='innerContainer'>
          <section className="sectionContainer">
            <div className="outerRow">
              <div className="columnLeft">
                <h1>
                  {t("welcomeTest")} <br />
                  {t("welcome")}
                </h1>
                <p>
                The CLI is a powerful tool for creating, modifying, and maintaining any software project, and is particularly useful for customizing our UI projects. We can use this CLI to enforce architectural rules and conventions, making our projects consistent and inter-operative.
                </p>


              </div>
                <div className='loginImgContainer '>
                  <div className="floatEnd" ><img src="assets/images/illustration 1.png" alt="" /></div>
                </div>

            </div>
          </section>
        </div>
      </div>
    </div>
  );
}

export default App;
